name: CI - Tests

on:
  push:
    branches:
      - main
#      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  setup-db:
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Checkout du repo
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: 🚀 Lancer la BDD seule
        run: docker compose -f docker-compose-test.yml up -d database

      - name: 📜 Vérifier que la BDD est prête
        run: |
          echo "En attente de la BDD..."
          for i in {1..30}; do
            if docker exec $(docker ps -q -f name=db_test) pg_isready -U postgres; then
              echo "✅ La BDD est prête !"
              exit 0
            fi
            echo "⏳ En attente de la BDD... (tentative $i/30)"
            sleep 5
          done
          echo "❌ La BDD n'est pas prête après 30 tentatives"
          exit 1

  test-api:
    needs: setup-db
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Checkout du repo
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: 🚀 Lancer l'API (sans la BDD)
        run: docker compose -f docker-compose-test.yml up -d api

  collect-results:
    needs: test-api
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Checkout du repo
        uses: actions/checkout@v4

      - name: 📂 Sauvegarder les rapports de tests
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-api
          path: ./tests/reports/api/

      - name: 🧹 Nettoyer les conteneurs Docker
        if: always()
        run: docker compose -f docker-compose-test.yml down
